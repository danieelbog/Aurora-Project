@model AuroraProject.ViewModels.GigDetailsViewModel
@{
    ViewBag.Title = Model.Heading;
}

<div class="container-fluid card-container-fluid">

    <h6 class="navigator-h6">@Html.ActionLink("Aurora", "Index", "Home") > <a href="" onClick="window.location.reload();">@Model.Heading</a></h6>

    <div class="page-decoration container">
        <h1 class="page-heading">@Model.Heading</h1>
        <p class="page-descreption">Custom Text to describe a Specific Industry with one catchy phrase</p>
    </div>

    <div class="row justify-content-around">
        <!-- Inverse Card -->
        <div class="card gig-card pmd-card pmd-card-dark mt-4 p-0 mr-1 ml-1 col-xl-3 col-lg-5 col-md-6 col-sm-8">
            <div class="card-header d-flex flex-row">

                <div class="media-body">
                    @*<p class="text-center text-capitalize text-danger enabled-gig"><i class="fa fa-eye-slash"></i></p>*@

                    <a class="pmd-avatar-list-img position-absolute" href="javascript:void(0);">
                        <img src="http://propeller.in/components/list/img/40x40.png" width="40" height="40">
                    </a>
                    <h3 class="card-title text-center">
                        @Model.Gig.User.UserFullName
                        @*<i class="fa fa-eye-slash js-disable-gig animated fadeInDown" data-gig-id="@gig.ID"></i>*@
                    </h3>
                    <p class="card-subtitle text-center">@Model.Gig.Influencer.AboutTheInfluencer</p>

                </div>
            </div>
            <div class="pmd-card-media">
                <img src="http://propeller.in/assets/images/profile-pic.png" width="1184" height="666" class="img-fluid">
            </div>

            @*<div class="btn-group align-self-stretch">
                    <i class="btn fa fa-bars dropdown-menu-mineGigs" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"></i>
                    <div class="dropdown-menu">
                        @Html.ActionLink("Edit", "Edit", "Gig", new { gig.ID }, new { @class = "dropdown-item" })
                        <a class="dropdown-item js-disable-gig" data-gig-id="@gig.ID" href="#">Disable</a>
                        <div class="dropdown-divider"></div>
                        <a class="dropdown-item" href="#">Delete</a>
                    </div>
                </div>*@

            <div class="card-body">
                <h2 class="card-title">@Model.Gig.GigName</h2>
                <p class="card-text">@Model.Gig.Descreption</p>
            </div>

            <div class="card-body m-0 p-0">
                <div class="col-12 d-flex justify-content-between">
                    <p class="card-subtitle mb-1 align-self-end">Delivery Time: @Model.Gig.BasicPackage.DeliveryTime</p>
                    <p class="card-subtitle mb-1 align-self-end">Starting From: @Model.Gig.BasicPackage.Price $</p>
                </div>
            </div>

            <div class="card-footer align-content-around d-flex justify-content-around">
                <button class="btn btn-sm pmd-btn-fab pmd-btn-flat pmd-ripple-effect btn-primary" type="button"><i class="material-icons pmd-sm">share</i></button>
                <button class="btn btn-sm pmd-btn-fab pmd-btn-flat pmd-ripple-effect btn-primary" type="button"><i class="material-icons pmd-sm">thumb_up</i></button>
                <button class="btn btn-sm pmd-btn-fab pmd-btn-flat pmd-ripple-effect btn-primary" type="button"><i class="material-icons pmd-sm">drafts</i></button>
            </div>
        </div>

        @if (Model.ShowActions)
        {
            <div>
                <form id="purchace-gig-basic">
                    <button class="btn btn-danger basicPackageBtn" data-sellingPackage-id="@Model.Gig.BasicPackageID" data-gig-id="@Model.Gig.ID">
                        @Model.Gig.BasicPackage.PackageName
                    </button>
                </form>

                <form id="purchace-gig-advanced">
                    <button class="btn btn-info advancedPackageBtn" data-sellingPackage-id="@Model.Gig.AdvancedPackageID" data-gig-id="@Model.Gig.ID">
                        @Model.Gig.AdvancedPackage.PackageName
                    </button>
                </form>

                <form id="purchace-gig-premium">
                    <button class="btn btn-success premiumPackagebtn" data-sellingPackage-id="@Model.Gig.PremiumPackageID" data-gig-id="@Model.Gig.ID">
                        @Model.Gig.PremiumPackage.PackageName
                    </button>
                </form>
            </div>
        }
    </div>
</div>


@section scripts {
    <script>
        $(document).ready(function () {

            FavouriteGigController.initial();
            FavouriteInfluencerController.initial();

            //PURCHASE BASIC PACKAGE JS
            $('#purchace-gig-basic').submit(function (e) {
                let viewModel = {};

                e.preventDefault(e.target.firstChild);

                let packageButton = $(e.target.children);

                viewModel.BasicPackageID = packageButton.attr("data-sellingPackage-id")
                viewModel.ID = packageButton.attr("data-gig-id")

                 bootbox.dialog({
                    title: 'Confirm Purchase',
                    message: '<p>Are you sure you want to purchase the Selected Service of the Gig?</p>',
                    size: 'large',
                    onEscape: true,
                    backdrop: true,
                    buttons: {
                        no: {
                            label: 'Cancel',
                            className: 'btn bootbox-cancel-btn shadow-none',
                            callback: function () {
                                bootbox.hideAll();
                            }
                        },
                        yes: {
                            label: 'Continue',
                            className: 'btn bootbox-confirm-btn shadow-none',
                            callback: function () {
                                $.ajax({
                                    url: '/api/sellingPackages',
                                    method: 'post',
                                    data: viewModel
                                })
                                    .done(function () {
                                        toastr.success("Purchased " + "@Model.Heading");

                                        $.getJSON("/api/notifications", function (notifications) {
                                            if (notifications.length == 0)
                                                return;

                                            $(".js-notifications-count")
                                                .text(notifications.length)
                                                .removeClass("hide")
                                                .addClass("animated bounceInDown");
                                        });

                                    })
                                    .fail(function () {
                                        toastr.error("Failed to Purchase " + "@Model.Heading");
                                    });
                            }
                        }
                    }
                })
            });

            //PURCHASE ADVANCED PACKAGE JS
            $('#purchace-gig-advanced').submit(function (e) {
                let viewModel = {};

                e.preventDefault(e.target.firstChild);

                let packageButton = $(e.target.children);

                viewModel.AdvancedPackageID = packageButton.attr("data-sellingPackage-id")
                viewModel.ID = packageButton.attr("data-gig-id")

                 bootbox.dialog({
                    title: 'Confirm Purchase',
                    message: '<p>Are you sure you want to purchase the Selected Service of the Gig?</p>',
                    size: 'large',
                    onEscape: true,
                    backdrop: true,
                    buttons: {
                        no: {
                            label: 'Cancel',
                            className: 'btn bootbox-cancel-btn shadow-none',
                            callback: function () {
                                bootbox.hideAll();
                            }
                        },
                        yes: {
                            label: 'Continue',
                            className: 'btn bootbox-confirm-btn shadow-none',
                            callback: function () {
                                $.ajax({
                                    url: '/api/sellingPackages',
                                    method: 'post',
                                    data: viewModel
                                })
                                    .done(function () {
                                        toastr.success("Purchased " + "@Model.Heading");

                                        $.getJSON("/api/notifications", function (notifications) {
                                            if (notifications.length == 0)
                                                return;

                                            $(".js-notifications-count")
                                                .text(notifications.length)
                                                .removeClass("hide")
                                                .addClass("animated bounceInDown");
                                        });
                                    })
                                    .fail(function () {
                                        toastr.error("Failed to Purchase " + "@Model.Heading");
                                    });
                            }
                        }
                    }
                })

            });

            //PURCHASE PREMIUM PACKAGE JS
            $('#purchace-gig-premium').submit(function (e) {
                let viewModel = {};

                e.preventDefault(e.target.firstChild);

                let packageButton = $(e.target.children);

                viewModel.PremiumPackageID = packageButton.attr("data-sellingPackage-id")
                viewModel.ID = packageButton.attr("data-gig-id")

                 bootbox.dialog({
                    title: 'Confirm Purchase',
                    message: '<p>Are you sure you want to purchase the Selected Service of the Gig?</p>',
                    size: 'large',
                    onEscape: true,
                    backdrop: true,
                    buttons: {
                        no: {
                            label: 'Cancel',
                            className: 'btn bootbox-cancel-btn shadow-none',
                            callback: function () {
                                bootbox.hideAll();
                            }
                        },
                        yes: {
                            label: 'Continue',
                            className: 'btn bootbox-confirm-btn shadow-none',
                            callback: function () {
                                $.ajax({
                                    url: '/api/sellingPackages',
                                    method: 'post',
                                    data: viewModel
                                })
                                    .done(function () {
                                        toastr.success("Purchased " + "@Model.Heading");

                                        $.getJSON("/api/notifications", function (notifications) {
                                            if (notifications.length == 0)
                                                return;

                                            $(".js-notifications-count")
                                                .text(notifications.length)
                                                .removeClass("hide")
                                                .addClass("animated bounceInDown");
                                        });
                                    })
                                    .fail(function () {
                                        toastr.error("Failed to Purchase " + "@Model.Heading");
                                    });
                            }
                        }
                    }
                })

            });


        });
    </script>
}
